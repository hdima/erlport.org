#!/usr/bin/env python

import StringIO

from pygments import lexers, util, highlight, formatters
from docutils import nodes
from docutils.core import publish_cmdline
from docutils.parsers.rst import directives


def get_highlighter(language):
    try:
        lexer = lexers.get_lexer_by_name(language)
    except util.ClassNotFound:
        return None

    formatter = formatters.get_formatter_by_name("html")
    def _highlighter(code):
        outfile = StringIO.StringIO()
        highlight(code, lexer, formatter, outfile)
        return outfile.getvalue()
    return _highlighter


def sourcecode(name, arguments, options, content, lineno,
        content_offset, block_text, state, state_machine):
    if not content:
        error = state_machine.reporter.error(
            "The '%s' block is empty; content required." % (name),
            nodes.literal_block(block_text, block_text), line=lineno)
        return [error]

    language = arguments[0]
    highlighter = get_highlighter(language)
    if highlighter is None:
        error = state_machine.reporter.error(
            "The '%s' directive does not support language '%s'." %
            (name, language),
            nodes.literal_block(block_text, block_text), line=lineno)
        return [error]

    text = highlighter("\n".join(content))
    html = '<div class="sourcecode %s">\n%s\n</div>\n' % (language, text)
    return [nodes.raw("", html, format="html")]

sourcecode.arguments = 1, 0, 0
sourcecode.options = {"language" : directives.unchanged }
sourcecode.content = 1


directives.register_directive("sourcecode", sourcecode)


if __name__ == "__main__":
    publish_cmdline(writer_name="html")
